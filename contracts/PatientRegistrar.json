{
  "contractName": "PatientRegistrar",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "patients",
      "outputs": [
        {
          "name": "yearOfBirth",
          "type": "uint256"
        },
        {
          "name": "gender",
          "type": "string"
        },
        {
          "name": "isInitialized",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "patientList",
      "outputs": [
        {
          "name": "yearOfBirth",
          "type": "uint256"
        },
        {
          "name": "gender",
          "type": "string"
        },
        {
          "name": "isInitialized",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "patient",
          "type": "address"
        },
        {
          "name": "gender",
          "type": "string"
        },
        {
          "name": "yearOfBirth",
          "type": "uint256"
        }
      ],
      "name": "registerPatientToRegistrar",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "viewPatientsList",
      "outputs": [
        {
          "components": [
            {
              "name": "yearOfBirth",
              "type": "uint256"
            },
            {
              "name": "gender",
              "type": "string"
            },
            {
              "name": "isInitialized",
              "type": "bool"
            }
          ],
          "name": "_patients",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b69806100606000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630869cfbc146100725780637106f03d146100b157806393e4b4cd146100dc578063babb1d4114610105578063f851a44014610144575b600080fd5b34801561007e57600080fd5b506100996004803603610094919081019061079e565b61016f565b6040516100a8939291906109b5565b60405180910390f35b3480156100bd57600080fd5b506100c661023e565b6040516100d39190610993565b60405180910390f35b3480156100e857600080fd5b5061010360048036036100fe91908101906107c7565b610365565b005b34801561011157600080fd5b5061012c6004803603610127919081019061082e565b6104f8565b60405161013b939291906109b5565b60405180910390f35b34801561015057600080fd5b506101596105d6565b6040516101669190610978565b60405180910390f35b6001602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102215780601f106101f657610100808354040283529160200191610221565b820191906000526020600020905b81548152906001019060200180831161020457829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561035c57838290600052602060002090600302016060604051908101604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103295780601f106102fe57610100808354040283529160200191610329565b820191906000526020600020905b81548152906001019060200180831161030c57829003601f168201915b505050505081526020016002820160009054906101000a900460ff16151515158152505081526020019060010190610262565b50505050905090565b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906103bb9291906105fb565b5080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600260606040519081016040528083815260200184815260200160011515815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000015560208201518160010190805190602001906104cf92919061067b565b5060408201518160020160006101000a81548160ff021916908315150217905550505050505050565b60028181548110151561050757fe5b9060005260206000209060030201600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061063c57805160ff191683800117855561066a565b8280016001018555821561066a579182015b8281111561066957825182559160200191906001019061064e565b5b50905061067791906106fb565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106bc57805160ff19168380011785556106ea565b828001600101855582156106ea579182015b828111156106e95782518255916020019190600101906106ce565b5b5090506106f791906106fb565b5090565b61071d91905b80821115610719576000816000905550600101610701565b5090565b90565b600061072c8235610ab2565b905092915050565b600082601f830112151561074757600080fd5b813561075a61075582610a20565b6109f3565b9150808252602083016020830185838301111561077657600080fd5b610781838284610adc565b50505092915050565b60006107968235610ad2565b905092915050565b6000602082840312156107b057600080fd5b60006107be84828501610720565b91505092915050565b6000806000606084860312156107dc57600080fd5b60006107ea86828701610720565b935050602084013567ffffffffffffffff81111561080757600080fd5b61081386828701610734565b92505060406108248682870161078a565b9150509250925092565b60006020828403121561084057600080fd5b600061084e8482850161078a565b91505092915050565b61086081610a7c565b82525050565b600061087182610a59565b8084526020840193508360208202850161088a85610a4c565b60005b848110156108c35783830388526108a5838351610919565b92506108b082610a6f565b915060208801975060018101905061088d565b508196508694505050505092915050565b6108dd81610a9c565b82525050565b60006108ee82610a64565b808452610902816020860160208601610aeb565b61090b81610b1e565b602085010191505092915050565b60006060830160008301516109316000860182610969565b506020830151848203602086015261094982826108e3565b915050604083015161095e60408601826108d4565b508091505092915050565b61097281610aa8565b82525050565b600060208201905061098d6000830184610857565b92915050565b600060208201905081810360008301526109ad8184610866565b905092915050565b60006060820190506109ca6000830186610969565b81810360208301526109dc81856108e3565b90506109eb60408301846108d4565b949350505050565b6000604051905081810181811067ffffffffffffffff82111715610a1657600080fd5b8060405250919050565b600067ffffffffffffffff821115610a3757600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610b09578082015181840152602081019050610aee565b83811115610b18576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820f57e286c5af435464ae411eae1c3c73aea8466af51ea4d1d3fc3099396fff4de6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630869cfbc146100725780637106f03d146100b157806393e4b4cd146100dc578063babb1d4114610105578063f851a44014610144575b600080fd5b34801561007e57600080fd5b506100996004803603610094919081019061079e565b61016f565b6040516100a8939291906109b5565b60405180910390f35b3480156100bd57600080fd5b506100c661023e565b6040516100d39190610993565b60405180910390f35b3480156100e857600080fd5b5061010360048036036100fe91908101906107c7565b610365565b005b34801561011157600080fd5b5061012c6004803603610127919081019061082e565b6104f8565b60405161013b939291906109b5565b60405180910390f35b34801561015057600080fd5b506101596105d6565b6040516101669190610978565b60405180910390f35b6001602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102215780601f106101f657610100808354040283529160200191610221565b820191906000526020600020905b81548152906001019060200180831161020457829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561035c57838290600052602060002090600302016060604051908101604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103295780601f106102fe57610100808354040283529160200191610329565b820191906000526020600020905b81548152906001019060200180831161030c57829003601f168201915b505050505081526020016002820160009054906101000a900460ff16151515158152505081526020019060010190610262565b50505050905090565b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906103bb9291906105fb565b5080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600260606040519081016040528083815260200184815260200160011515815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000015560208201518160010190805190602001906104cf92919061067b565b5060408201518160020160006101000a81548160ff021916908315150217905550505050505050565b60028181548110151561050757fe5b9060005260206000209060030201600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061063c57805160ff191683800117855561066a565b8280016001018555821561066a579182015b8281111561066957825182559160200191906001019061064e565b5b50905061067791906106fb565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106bc57805160ff19168380011785556106ea565b828001600101855582156106ea579182015b828111156106e95782518255916020019190600101906106ce565b5b5090506106f791906106fb565b5090565b61071d91905b80821115610719576000816000905550600101610701565b5090565b90565b600061072c8235610ab2565b905092915050565b600082601f830112151561074757600080fd5b813561075a61075582610a20565b6109f3565b9150808252602083016020830185838301111561077657600080fd5b610781838284610adc565b50505092915050565b60006107968235610ad2565b905092915050565b6000602082840312156107b057600080fd5b60006107be84828501610720565b91505092915050565b6000806000606084860312156107dc57600080fd5b60006107ea86828701610720565b935050602084013567ffffffffffffffff81111561080757600080fd5b61081386828701610734565b92505060406108248682870161078a565b9150509250925092565b60006020828403121561084057600080fd5b600061084e8482850161078a565b91505092915050565b61086081610a7c565b82525050565b600061087182610a59565b8084526020840193508360208202850161088a85610a4c565b60005b848110156108c35783830388526108a5838351610919565b92506108b082610a6f565b915060208801975060018101905061088d565b508196508694505050505092915050565b6108dd81610a9c565b82525050565b60006108ee82610a64565b808452610902816020860160208601610aeb565b61090b81610b1e565b602085010191505092915050565b60006060830160008301516109316000860182610969565b506020830151848203602086015261094982826108e3565b915050604083015161095e60408601826108d4565b508091505092915050565b61097281610aa8565b82525050565b600060208201905061098d6000830184610857565b92915050565b600060208201905081810360008301526109ad8184610866565b905092915050565b60006060820190506109ca6000830186610969565b81810360208301526109dc81856108e3565b90506109eb60408301846108d4565b949350505050565b6000604051905081810181811067ffffffffffffffff82111715610a1657600080fd5b8060405250919050565b600067ffffffffffffffff821115610a3757600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610b09578082015181840152602081019050610aee565b83811115610b18576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820f57e286c5af435464ae411eae1c3c73aea8466af51ea4d1d3fc3099396fff4de6c6578706572696d656e74616cf50037",
  "sourceMap": "60:1096:0:-;;;312:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;312:56:0;351:10;343:5;;:18;;;;;;;;;;;;;;;;;;60:1096;;;;;;",
  "deployedSourceMap": "60:1096:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;228:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;228:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1044:110;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1044:110:0;;;;;;;;;;;;;;;;;;;;374:664;;8:9:-1;5:2;;;30:1;27;20:12;5:2;374:664:0;;;;;;;;;;;;;;;;;;;277:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;277:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;197:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;197:20:0;;;;;;;;;;;;;;;;;;;;228:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1044:110::-;1093:19;1136:11;1124:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1044:110;:::o;374:664::-;778:6;751:8;:17;760:7;751:17;;;;;;;;;;;;;;;:24;;:33;;;;;;;;;;;;:::i;:::-;;826:11;794:8;:17;803:7;794:17;;;;;;;;;;;;;;;:29;;:43;;;;881:4;847:8;:17;856:7;847:17;;;;;;;;;;;;;;;:31;;;:38;;;;;;;;;;;;;;;;;;895:11;912:118;;;;;;;;;975:11;912:118;;;;942:6;912:118;;;;1015:4;912:118;;;;;895:136;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;895:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;374:664;;;:::o;277:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;197:20::-;;;;;;;;;;;;;:::o;60:1096::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;131:442;;233:3;226:4;218:6;214:17;210:27;203:35;200:2;;;251:1;248;241:12;200:2;288:6;275:20;310:65;325:49;367:6;325:49;;;310:65;;;301:74;;395:6;388:5;381:21;431:4;423:6;419:17;464:4;457:5;453:16;499:3;490:6;485:3;481:16;478:25;475:2;;;516:1;513;506:12;475:2;526:41;560:6;555:3;550;526:41;;;193:380;;;;;;;;581:118;;648:46;686:6;673:20;648:46;;;639:55;;633:66;;;;;706:241;;810:2;798:9;789:7;785:23;781:32;778:2;;;826:1;823;816:12;778:2;861:1;878:53;923:7;914:6;903:9;899:22;878:53;;;868:63;;840:97;772:175;;;;;954:597;;;;1102:2;1090:9;1081:7;1077:23;1073:32;1070:2;;;1118:1;1115;1108:12;1070:2;1153:1;1170:53;1215:7;1206:6;1195:9;1191:22;1170:53;;;1160:63;;1132:97;1288:2;1277:9;1273:18;1260:32;1312:18;1304:6;1301:30;1298:2;;;1344:1;1341;1334:12;1298:2;1364:63;1419:7;1410:6;1399:9;1395:22;1364:63;;;1354:73;;1239:194;1464:2;1482:53;1527:7;1518:6;1507:9;1503:22;1482:53;;;1472:63;;1443:98;1064:487;;;;;;1558:241;;1662:2;1650:9;1641:7;1637:23;1633:32;1630:2;;;1678:1;1675;1668:12;1630:2;1713:1;1730:53;1775:7;1766:6;1755:9;1751:22;1730:53;;;1720:63;;1692:97;1624:175;;;;;1806:110;1879:31;1904:5;1879:31;;;1874:3;1867:44;1861:55;;;2002:857;;2173:72;2239:5;2173:72;;;2263:6;2258:3;2251:19;2287:4;2282:3;2278:14;2271:21;;2335:3;2377:4;2369:6;2365:17;2360:3;2356:27;2403:74;2471:5;2403:74;;;2498:1;2483:337;2508:6;2505:1;2502:13;2483:337;;;2570:9;2564:4;2560:20;2555:3;2548:33;2596:94;2685:4;2676:6;2670:13;2596:94;;;2588:102;;2707:78;2778:6;2707:78;;;2697:88;;2808:4;2803:3;2799:14;2792:21;;2530:1;2527;2523:9;2518:14;;2483:337;;;2487:14;2833:4;2826:11;;2850:3;2843:10;;2152:707;;;;;;;;;2867:101;2934:28;2956:5;2934:28;;;2929:3;2922:41;2916:52;;;2975:292;;3073:35;3102:5;3073:35;;;3125:6;3120:3;3113:19;3137:63;3193:6;3186:4;3181:3;3177:14;3170:4;3163:5;3159:16;3137:63;;;3232:29;3254:6;3232:29;;;3225:4;3220:3;3216:14;3212:50;3205:57;;3053:214;;;;;;3347:740;;3478:4;3473:3;3469:14;3571:3;3564:5;3560:15;3554:22;3588:61;3644:3;3639;3635:13;3622:11;3588:61;;;3498:163;3739:4;3732:5;3728:16;3722:23;3790:3;3784:4;3780:14;3773:4;3768:3;3764:14;3757:38;3810:68;3873:4;3860:11;3810:68;;;3802:76;;3671:219;3975:4;3968:5;3964:16;3958:23;3993:56;4043:4;4038:3;4034:14;4021:11;3993:56;;;3900:161;4078:4;4071:11;;3451:636;;;;;;4094:110;4167:31;4192:5;4167:31;;;4162:3;4155:44;4149:55;;;4211:193;;4319:2;4308:9;4304:18;4296:26;;4333:61;4391:1;4380:9;4376:17;4367:6;4333:61;;;4290:114;;;;;4411:413;;4605:2;4594:9;4590:18;4582:26;;4655:9;4649:4;4645:20;4641:1;4630:9;4626:17;4619:47;4680:134;4809:4;4800:6;4680:134;;;4672:142;;4576:248;;;;;4831:463;;5005:2;4994:9;4990:18;4982:26;;5019:61;5077:1;5066:9;5062:17;5053:6;5019:61;;;5128:9;5122:4;5118:20;5113:2;5102:9;5098:18;5091:48;5153:64;5212:4;5203:6;5153:64;;;5145:72;;5228:56;5280:2;5269:9;5265:18;5256:6;5228:56;;;4976:318;;;;;;;5301:256;;5363:2;5357:9;5347:19;;5401:4;5393:6;5389:17;5500:6;5488:10;5485:22;5464:18;5452:10;5449:34;5446:62;5443:2;;;5521:1;5518;5511:12;5443:2;5541:10;5537:2;5530:22;5341:216;;;;;5564:259;;5708:18;5700:6;5697:30;5694:2;;;5740:1;5737;5730:12;5694:2;5784:4;5780:9;5773:4;5765:6;5761:17;5757:33;5749:41;;5813:4;5807;5803:15;5795:23;;5631:192;;;;5832:139;;5959:4;5951:6;5947:17;5936:28;;5928:43;;;;5980:125;;6094:5;6088:12;6078:22;;6072:33;;;;6112:88;;6189:5;6183:12;6173:22;;6167:33;;;;6208:140;;6337:4;6329:6;6325:17;6314:28;;6307:41;;;;6356:128;;6436:42;6429:5;6425:54;6414:65;;6408:76;;;;6491:92;;6571:5;6564:13;6557:21;6546:32;;6540:43;;;;6590:79;;6659:5;6648:16;;6642:27;;;;6676:128;;6756:42;6749:5;6745:54;6734:65;;6728:76;;;;6811:79;;6880:5;6869:16;;6863:27;;;;6898:145;6979:6;6974:3;6969;6956:30;7035:1;7026:6;7021:3;7017:16;7010:27;6949:94;;;;7052:268;7117:1;7124:101;7138:6;7135:1;7132:13;7124:101;;;7214:1;7209:3;7205:11;7199:18;7195:1;7190:3;7186:11;7179:39;7160:2;7157:1;7153:10;7148:15;;7124:101;;;7240:6;7237:1;7234:13;7231:2;;;7305:1;7296:6;7291:3;7287:16;7280:27;7231:2;7101:219;;;;;7328:97;;7416:2;7412:7;7407:2;7400:5;7396:14;7392:28;7382:38;;7376:49;;;",
  "source": "pragma solidity ^0.4.23;\npragma experimental ABIEncoderV2;\n\ncontract PatientRegistrar {\n    struct Patient {\n        uint yearOfBirth;\n        string gender;\n        bool isInitialized;\n    }\n\n    address public admin;\n    \n    mapping(address => Patient) public patients;\n    Patient[] public patientList;\n\n    constructor() public {\n        admin = msg.sender;\n    }\n\n    function registerPatientToRegistrar(address patient, string gender, uint yearOfBirth) public {\n        /*\n        require(\n            msg.sender == admin,\n            \"Only admin can add patient to network\"\n        );\n        */\n      \n        // require(\n        //     !patients[patient].isInitialized,\n        //     \"Patient already exists\"\n        // );\n        \n        patients[patient].gender = gender;\n        patients[patient].yearOfBirth = yearOfBirth;\n        patients[patient].isInitialized = true;\n        patientList.push(Patient({\n            gender: gender,\n            yearOfBirth: yearOfBirth,\n            isInitialized: true\n        }));\n    }\n\n    function viewPatientsList() public view returns (Patient[] _patients) {\n        _patients = patientList;\n    }\n}\n",
  "sourcePath": "/Users/paulsoh/Workspace/mcidl/contracts/contracts/PatientRegistrar.sol",
  "ast": {
    "absolutePath": "/Users/paulsoh/Workspace/mcidl/contracts/contracts/PatientRegistrar.sol",
    "exportedSymbols": {
      "PatientRegistrar": [
        80
      ]
    },
    "id": 81,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 80,
        "linearizedBaseContracts": [
          80
        ],
        "name": "PatientRegistrar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PatientRegistrar.Patient",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "yearOfBirth",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "117:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "117:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "gender",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "143:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "143:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "isInitialized",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "166:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "166:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Patient",
            "nodeType": "StructDefinition",
            "scope": 80,
            "src": "92:99:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 80,
            "src": "197:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "197:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "name": "patients",
            "nodeType": "VariableDeclaration",
            "scope": 80,
            "src": "228:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$9_storage_$",
              "typeString": "mapping(address => struct PatientRegistrar.Patient)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "236:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "228:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$9_storage_$",
                "typeString": "mapping(address => struct PatientRegistrar.Patient)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13,
                "name": "Patient",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 9,
                "src": "247:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Patient_$9_storage_ptr",
                  "typeString": "struct PatientRegistrar.Patient"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "name": "patientList",
            "nodeType": "VariableDeclaration",
            "scope": 80,
            "src": "277:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Patient_$9_storage_$dyn_storage",
              "typeString": "struct PatientRegistrar.Patient[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 16,
                "name": "Patient",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 9,
                "src": "277:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Patient_$9_storage_ptr",
                  "typeString": "struct PatientRegistrar.Patient"
                }
              },
              "id": 17,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "277:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Patient_$9_storage_$dyn_storage_ptr",
                "typeString": "struct PatientRegistrar.Patient[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "333:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "343:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 22,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "351:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "351:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "343:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "343:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:0:0"
            },
            "scope": 80,
            "src": "312:56:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "467:571:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "patients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "751:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$9_storage_$",
                            "typeString": "mapping(address => struct PatientRegistrar.Patient storage ref)"
                          }
                        },
                        "id": 38,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 37,
                          "name": "patient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "760:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "751:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$9_storage",
                          "typeString": "struct PatientRegistrar.Patient storage ref"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "gender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "751:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "gender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "778:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "751:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "751:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 43,
                          "name": "patients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "794:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$9_storage_$",
                            "typeString": "mapping(address => struct PatientRegistrar.Patient storage ref)"
                          }
                        },
                        "id": 45,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "patient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "803:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "794:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$9_storage",
                          "typeString": "struct PatientRegistrar.Patient storage ref"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "yearOfBirth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "794:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "yearOfBirth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "826:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "794:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "794:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 50,
                          "name": "patients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "847:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$9_storage_$",
                            "typeString": "mapping(address => struct PatientRegistrar.Patient storage ref)"
                          }
                        },
                        "id": 52,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 51,
                          "name": "patient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "856:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "847:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$9_storage",
                          "typeString": "struct PatientRegistrar.Patient storage ref"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isInitialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "847:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "881:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "847:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "847:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "gender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "942:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "yearOfBirth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "975:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1015:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 60,
                          "name": "Patient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "912:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Patient_$9_storage_ptr_$",
                            "typeString": "type(struct PatientRegistrar.Patient storage pointer)"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "gender",
                          "yearOfBirth",
                          "isInitialized"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "912:118:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$9_memory",
                          "typeString": "struct PatientRegistrar.Patient memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Patient_$9_memory",
                          "typeString": "struct PatientRegistrar.Patient memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "patientList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "895:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Patient_$9_storage_$dyn_storage",
                          "typeString": "struct PatientRegistrar.Patient storage ref[] storage ref"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "895:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Patient_$9_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct PatientRegistrar.Patient storage ref) returns (uint256)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "895:136:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "895:136:0"
                }
              ]
            },
            "documentation": null,
            "id": 68,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "registerPatientToRegistrar",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "410:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "gender",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "427:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "name": "yearOfBirth",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "442:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:50:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:0:0"
            },
            "scope": 80,
            "src": "374:664:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "1114:40:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_patients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1124:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Patient_$9_memory_$dyn_memory_ptr",
                        "typeString": "struct PatientRegistrar.Patient memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 75,
                      "name": "patientList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1136:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Patient_$9_storage_$dyn_storage",
                        "typeString": "struct PatientRegistrar.Patient storage ref[] storage ref"
                      }
                    },
                    "src": "1124:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Patient_$9_memory_$dyn_memory_ptr",
                      "typeString": "struct PatientRegistrar.Patient memory[] memory"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1124:23:0"
                }
              ]
            },
            "documentation": null,
            "id": 79,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "viewPatientsList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1069:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "_patients",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1093:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Patient_$9_memory_$dyn_memory_ptr",
                    "typeString": "struct PatientRegistrar.Patient[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 70,
                      "name": "Patient",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 9,
                      "src": "1093:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$9_storage_ptr",
                        "typeString": "struct PatientRegistrar.Patient"
                      }
                    },
                    "id": 71,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1093:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Patient_$9_storage_$dyn_storage_ptr",
                      "typeString": "struct PatientRegistrar.Patient[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1092:21:0"
            },
            "scope": 80,
            "src": "1044:110:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 81,
        "src": "60:1096:0"
      }
    ],
    "src": "0:1157:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/paulsoh/Workspace/mcidl/contracts/contracts/PatientRegistrar.sol",
    "exportedSymbols": {
      "PatientRegistrar": [
        80
      ]
    },
    "id": 81,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 80,
        "linearizedBaseContracts": [
          80
        ],
        "name": "PatientRegistrar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PatientRegistrar.Patient",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "yearOfBirth",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "117:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "117:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "gender",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "143:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "143:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "isInitialized",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "166:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "166:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Patient",
            "nodeType": "StructDefinition",
            "scope": 80,
            "src": "92:99:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 80,
            "src": "197:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "197:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "name": "patients",
            "nodeType": "VariableDeclaration",
            "scope": 80,
            "src": "228:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$9_storage_$",
              "typeString": "mapping(address => struct PatientRegistrar.Patient)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "236:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "228:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$9_storage_$",
                "typeString": "mapping(address => struct PatientRegistrar.Patient)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13,
                "name": "Patient",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 9,
                "src": "247:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Patient_$9_storage_ptr",
                  "typeString": "struct PatientRegistrar.Patient"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "name": "patientList",
            "nodeType": "VariableDeclaration",
            "scope": 80,
            "src": "277:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Patient_$9_storage_$dyn_storage",
              "typeString": "struct PatientRegistrar.Patient[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 16,
                "name": "Patient",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 9,
                "src": "277:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Patient_$9_storage_ptr",
                  "typeString": "struct PatientRegistrar.Patient"
                }
              },
              "id": 17,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "277:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Patient_$9_storage_$dyn_storage_ptr",
                "typeString": "struct PatientRegistrar.Patient[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "333:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "343:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 22,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "351:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "351:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "343:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "343:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:0:0"
            },
            "scope": 80,
            "src": "312:56:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "467:571:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 36,
                          "name": "patients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "751:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$9_storage_$",
                            "typeString": "mapping(address => struct PatientRegistrar.Patient storage ref)"
                          }
                        },
                        "id": 38,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 37,
                          "name": "patient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "760:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "751:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$9_storage",
                          "typeString": "struct PatientRegistrar.Patient storage ref"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "gender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "751:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "gender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "778:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "751:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "751:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 43,
                          "name": "patients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "794:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$9_storage_$",
                            "typeString": "mapping(address => struct PatientRegistrar.Patient storage ref)"
                          }
                        },
                        "id": 45,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "patient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "803:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "794:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$9_storage",
                          "typeString": "struct PatientRegistrar.Patient storage ref"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "yearOfBirth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "794:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 47,
                      "name": "yearOfBirth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "826:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "794:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "794:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 50,
                          "name": "patients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "847:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Patient_$9_storage_$",
                            "typeString": "mapping(address => struct PatientRegistrar.Patient storage ref)"
                          }
                        },
                        "id": 52,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 51,
                          "name": "patient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "856:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "847:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$9_storage",
                          "typeString": "struct PatientRegistrar.Patient storage ref"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isInitialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "847:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "881:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "847:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "847:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "gender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "942:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "yearOfBirth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "975:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1015:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 60,
                          "name": "Patient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "912:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Patient_$9_storage_ptr_$",
                            "typeString": "type(struct PatientRegistrar.Patient storage pointer)"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "gender",
                          "yearOfBirth",
                          "isInitialized"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "912:118:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patient_$9_memory",
                          "typeString": "struct PatientRegistrar.Patient memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Patient_$9_memory",
                          "typeString": "struct PatientRegistrar.Patient memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "patientList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "895:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Patient_$9_storage_$dyn_storage",
                          "typeString": "struct PatientRegistrar.Patient storage ref[] storage ref"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "895:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Patient_$9_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct PatientRegistrar.Patient storage ref) returns (uint256)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "895:136:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "895:136:0"
                }
              ]
            },
            "documentation": null,
            "id": 68,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "registerPatientToRegistrar",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "410:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "gender",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "427:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "name": "yearOfBirth",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "442:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "409:50:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:0:0"
            },
            "scope": 80,
            "src": "374:664:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "1114:40:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "_patients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1124:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Patient_$9_memory_$dyn_memory_ptr",
                        "typeString": "struct PatientRegistrar.Patient memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 75,
                      "name": "patientList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1136:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Patient_$9_storage_$dyn_storage",
                        "typeString": "struct PatientRegistrar.Patient storage ref[] storage ref"
                      }
                    },
                    "src": "1124:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Patient_$9_memory_$dyn_memory_ptr",
                      "typeString": "struct PatientRegistrar.Patient memory[] memory"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1124:23:0"
                }
              ]
            },
            "documentation": null,
            "id": 79,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "viewPatientsList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1069:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "_patients",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1093:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Patient_$9_memory_$dyn_memory_ptr",
                    "typeString": "struct PatientRegistrar.Patient[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 70,
                      "name": "Patient",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 9,
                      "src": "1093:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$9_storage_ptr",
                        "typeString": "struct PatientRegistrar.Patient"
                      }
                    },
                    "id": 71,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1093:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Patient_$9_storage_$dyn_storage_ptr",
                      "typeString": "struct PatientRegistrar.Patient[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1092:21:0"
            },
            "scope": 80,
            "src": "1044:110:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 81,
        "src": "60:1096:0"
      }
    ],
    "src": "0:1157:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "1532499546362": {
      "events": {},
      "links": {},
      "address": "0xcfeb869f69431e42cdb54a4f4f105c19c080a601",
      "transactionHash": "0x44d4957da31bef21f08caa571cb32a334f120ee2c3810b2f156cbf67e573577c"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-07-31T22:07:21.537Z"
}